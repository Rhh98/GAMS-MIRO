GAMS 30.2.0  r482c588 Released Feb  7, 2020 WEX-WEI x86 64bit/MS Windows - 06/21/20 18:10:36 Page 1
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


   1  * Facility Layout Optimization
   2   
   3  Option optcr=0.01;
   4  Option Optca=0;
   5   
   6  Set Machines /CNC, Mill, Drill, Punch/;
   7  Set Products /P1,P2,P3/;
   8   
   9  Alias(Machines,m1,m2);
  10   
  11   
  12  *Initial Co-ordinates of Machines
  13  set coord /X,Y/
  14      RS recieving and shipping /R,S/;
  16  table Mcoord(machines,coord)
  17        X    Y
  18  CNC   100  200
  19  Drill 200  100
  20  Mill  300  100
  21  Punch 100  300;
  22   
  23  * Co-ordinates of Shipping and Receiving
  24  table RScoord(RS,coord)
  25     X    Y
  26  R  500  125
  27  S  715  450;
  28   
  29  *Minimum Distance
  30  Parameter
  31    Min_Distance(Machines,Machines) /
  32     CNC.Mill 50,
  33     CNC.Drill 50,
  34     CNC.Punch 50
  35  /;
  36   
  37  *Costing Data
  38  Parameters CM(Machines) /set.Machines 300/, CH(Products) /set.Products 100/;
  40  Set Arcs(Products, Machines, Machines);
  41  Arcs('P1','CNC', 'Drill')=yes;
  42  Arcs('P1','Drill', 'Punch')=yes;
  43  Arcs('P2','Mill', 'Drill')=yes;
  44  Arcs('P2','Drill', 'Punch')=yes;
  45  Arcs('P3','CNC', 'Drill')=yes;
  46  Arcs('P3','Drill', 'Mill')=yes;
  47  Arcs('P3','Mill', 'Punch')=yes;
  48  *Area for Machine movement restriction
  49  set lucoord /Xlow,Xup,Ylow,Yup/;
  51  table LowUpCoord(Machines,lucoord) "lower and upper bound of the co-coordinats of machines"
  52         Xlow    Xup  Ylow  Yup
  53  CNC    155     300  100   300
  54  Drill  100     300  100   300
  55  Punch  221     300  100   293
  56  Mill   100     228  100   300
  57  ;
  59   
  60  *Initial Distance Matrix
  61  Parameter Distances(Machines,Machines);
  62  alias(m1,m2,Machines);
  63  Distances(m1,m2)=sqrt(sqr(Mcoord(m1,'X')-Mcoord(m2,'X'))+  sqr(Mcoord(m1,'Y')-Mcoord(m2,'Y')));
  64   
  65  free variable cost;
  66  variable X_new(Machines), Y_new(Machines);
  67   
  68  Equations
  69  Objective,
  70  Min_Dist(Machines,Machines);
  71   
  72  Objective..
  73  cost =E= sum(Machines,CM(Machines)*sqrt(sqr(X_new(Machines)-Mcoord(Machines,'X'))+  sqr(Y_new(Machines)-Mcoord(Machines,'Y'))))
  74         + sum((Products,m1,m2)$Arcs(Products,m1,m2), CH(Products)*(sqrt(sqr(X_new(m1)-X_new(m2))+  sqr(Y_new(m1)-Y_new(m2)))- sqrt(sqr(Mcoord(m1,'X')-Mcoord(m2,'X'))+  sqr(Mcoord(m1,'Y')-Mcoord(m2,'Y')))))
  75         + (CH('P1')+CH('P3'))*(sqrt(sqr(X_new('CNC')-RScoord('R','X'))+ sqr(Y_new('CNC')-RScoord('R','Y')))-sqrt(sqr(Mcoord('CNC','X')-RScoord('R','X'))+ sqr(Mcoord('CNC','Y')-RScoord('R','Y')))) + CH('P2')*(sqrt(sqr(X_new('Mill')-RScoord('R','X'))+
  76         sqr(Y_new('Mill')-RScoord('R','Y')))-sqrt(sqr(Mcoord('Mill','X')-RScoord('R','X'))+ sqr(Mcoord('Mill','y')-RScoord('R','Y'))))
  77         + (CH('P1')+CH('P2')+CH('P3'))*(sqrt(sqr(X_new('Punch')-RScoord('S','X'))+ sqr(Y_new('Punch')-RScoord('S','Y')))-sqrt(sqr(Mcoord('Punch','X')-RScoord('S','X'))+ sqr(Mcoord('Punch','Y')-RScoord('S','Y'))));
  78   
  79  Min_Dist(m1,m2)$(ord(m1) <> ord(m2))..
  80  sqrt(sqr(X_new(m1)-X_new(m2))+  sqr(Y_new(m1)-Y_new(m2))) =G= Min_Distance(m1,m2)+30;
  81   
  82  model Facility_Layout /all/;
  83   
  84  option nlp=baron;
  85  Facility_Layout.optcr = 1e-4;
  86   
  87  X_new.lo(Machines) = LowUpcoord(Machines,'xlow');
  88  Y_new.lo(Machines) = LowUpcoord(Machines,'ylow');
  89  X_new.up(Machines) = LowUpcoord(Machines,'xup');
  90  Y_new.up(Machines) = LowUpcoord(Machines,'yup');
  91   
  92  solve Facility_Layout using nlp minimizing cost;
  93  Set resultHeader /x,y,newx,newy,CH,CM,XR,YR,XS,YS,status/;
  94   
  96  table result(machines,products,resultHeader);
  98   
  99  result(machines,products,'newx')=x_new.l(Machines);
 100  result(machines,products,'newy')=y_new.l(Machines);
 101  result(machines,products,'x')=mcoord(Machines,'x');
 102  result(machines,products,'y')=mcoord(Machines,'y');
 103  result(machines,products,'CH')=CH(products);
 104  result(machines,products,'CM')=CM(machines);
 105  result(machines,products,'XR')=RScoord('R','X');
 106  result(machines,products,'XS')=RScoord('S','X');
 107  result(machines,products,'YR')=RScoord('R','Y');
 108  result(machines,products,'YS')=RScoord('S','Y');
 109  result(machines,products,'status')=Facility_Layout.suminfes+1;
 110   
 111   
 112   


COMPILATION TIME     =        0.016 SECONDS      3 MB  30.2.0 r482c588 WEX-WEI
GAMS 30.2.0  r482c588 Released Feb  7, 2020 WEX-WEI x86 64bit/MS Windows - 06/21/20 18:10:36 Page 2
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Equation Listing    SOLVE Facility_Layout Using NLP From line 92


---- Objective  =E=  

Objective..  cost - (145.098665735068)*X_new(CNC) + (499.805257848289)*X_new(Mill) + (700)*X_new(Drill) - (210.503498736116)*X_new(Punch) + (277.319624718688)*Y_new(CNC) + (6.23782861551805)*Y_new(Mill) + (0)*Y_new(Drill) + (430.11263940086)*Y_new(Punch)
      =E= -412748.180010247 ; (LHS = -532550.001043358, INFES = 119801.821033111 ****)
     

---- Min_Dist  =G=  

Min_Dist(CNC,Mill)..  (1)*X_new(CNC) - (1)*X_new(Mill) + (0)*Y_new(CNC) + (0)*Y_new(Mill) =G= 80 ; (LHS = 55, INFES = 25 ****)
     
Min_Dist(CNC,Drill)..  (1)*X_new(CNC) - (1)*X_new(Drill) + (0)*Y_new(CNC) + (0)*Y_new(Drill) =G= 80 ; (LHS = 55, INFES = 25 ****)
     
Min_Dist(CNC,Punch)..  - (1)*X_new(CNC) + (1)*X_new(Punch) + (0)*Y_new(CNC) + (0)*Y_new(Punch) =G= 80 ; (LHS = 66, INFES = 14 ****)
     
REMAINING 9 ENTRIES SKIPPED

GAMS 30.2.0  r482c588 Released Feb  7, 2020 WEX-WEI x86 64bit/MS Windows - 06/21/20 18:10:36 Page 3
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Column Listing      SOLVE Facility_Layout Using NLP From line 92


---- cost  

cost
                (.LO, .L, .UP, .M = -INF, 0, +INF, 0)
        1       Objective


---- X_new  

X_new(CNC)
                (.LO, .L, .UP, .M = 155, 155, 300, 0)
    (-145.0987) Objective
       (1)      Min_Dist(CNC,Mill)
       (1)      Min_Dist(CNC,Drill)
      (-1)      Min_Dist(CNC,Punch)
       (1)      Min_Dist(Mill,CNC)
       (1)      Min_Dist(Drill,CNC)
      (-1)      Min_Dist(Punch,CNC)
        0       (OLD LEVEL ****)

X_new(Mill)
                (.LO, .L, .UP, .M = 100, 100, 228, 0)
     (499.8053) Objective
      (-1)      Min_Dist(CNC,Mill)
      (-1)      Min_Dist(Mill,CNC)
       (0)      Min_Dist(Mill,Drill)
      (-1)      Min_Dist(Mill,Punch)
       (0)      Min_Dist(Drill,Mill)
      (-1)      Min_Dist(Punch,Mill)
        0       (OLD LEVEL ****)

X_new(Drill)
                (.LO, .L, .UP, .M = 100, 100, 300, 0)
     (700)      Objective
      (-1)      Min_Dist(CNC,Drill)
       (0)      Min_Dist(Mill,Drill)
      (-1)      Min_Dist(Drill,CNC)
       (0)      Min_Dist(Drill,Mill)
      (-1)      Min_Dist(Drill,Punch)
      (-1)      Min_Dist(Punch,Drill)
        0       (OLD LEVEL ****)

REMAINING ENTRY SKIPPED

---- Y_new  

Y_new(CNC)
                (.LO, .L, .UP, .M = 100, 100, 300, 0)
     (277.3196) Objective
       (0)      Min_Dist(CNC,Mill)
       (0)      Min_Dist(CNC,Drill)
       (0)      Min_Dist(CNC,Punch)
       (0)      Min_Dist(Mill,CNC)
       (0)      Min_Dist(Drill,CNC)
       (0)      Min_Dist(Punch,CNC)
        0       (OLD LEVEL ****)

Y_new(Mill)
                (.LO, .L, .UP, .M = 100, 100, 300, 0)
       (6.2378) Objective
       (0)      Min_Dist(CNC,Mill)
       (0)      Min_Dist(Mill,CNC)
       (0)      Min_Dist(Mill,Drill)
       (0)      Min_Dist(Mill,Punch)
       (0)      Min_Dist(Drill,Mill)
       (0)      Min_Dist(Punch,Mill)
        0       (OLD LEVEL ****)

Y_new(Drill)
                (.LO, .L, .UP, .M = 100, 100, 300, 0)
       (0)      Objective
       (0)      Min_Dist(CNC,Drill)
       (0)      Min_Dist(Mill,Drill)
       (0)      Min_Dist(Drill,CNC)
       (0)      Min_Dist(Drill,Mill)
       (0)      Min_Dist(Drill,Punch)
       (0)      Min_Dist(Punch,Drill)
        0       (OLD LEVEL ****)

REMAINING ENTRY SKIPPED
GAMS 30.2.0  r482c588 Released Feb  7, 2020 WEX-WEI x86 64bit/MS Windows - 06/21/20 18:10:36 Page 4
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Model Statistics    SOLVE Facility_Layout Using NLP From line 92


MODEL STATISTICS

BLOCKS OF EQUATIONS           2     SINGLE EQUATIONS           13
BLOCKS OF VARIABLES           3     SINGLE VARIABLES            9  8 projected
NON ZERO ELEMENTS            57     NON LINEAR N-Z             56
DERIVATIVE POOL              20     CONSTANT POOL              26
CODE LENGTH                 251


GENERATION TIME      =        0.031 SECONDS      4 MB  30.2.0 r482c588 WEX-WEI


EXECUTION TIME       =        0.031 SECONDS      4 MB  30.2.0 r482c588 WEX-WEI
GAMS 30.2.0  r482c588 Released Feb  7, 2020 WEX-WEI x86 64bit/MS Windows - 06/21/20 18:10:36 Page 5
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
Solution Report     SOLVE Facility_Layout Using NLP From line 92


               S O L V E      S U M M A R Y

     MODEL   Facility_Layout     OBJECTIVE  cost
     TYPE    NLP                 DIRECTION  MINIMIZE
     SOLVER  BARON               FROM LINE  92

**** SOLVER STATUS     1 Normal Completion         
**** MODEL STATUS      2 Locally Optimal           
**** OBJECTIVE VALUE           -10986.3105

 RESOURCE USAGE, LIMIT          0.370      1000.000
 ITERATION COUNT, LIMIT         0    2000000000
 EVALUATION ERRORS              0             0

GAMS/BARON       30.2.0 r482c588 Released Feb 07, 2020 WEI x86 64bit/MS Window

BARON is a product of The Optimization Firm, LLC. http://www.minlp.com/
Parts of the BARON software were created at the
University of Illinois at Urbana-Champaign.


===========================================================================
 BARON version 19.12.7. Built: WIN-64 Sat Dec 7 14:49:49 EST 2019 

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: ILOG CPLEX                                      
 For NLP: MINOS, SNOPT, GAMS external NLP, IPOPT, FILTERSD, FILTERSQP

Solution      = -10986.3105324263  best solution found during preprocessing
Best possible = -10987.4092734
Absolute gap  = 1.09874097371357  optca = 1E-9
Relative gap  = 0.00010000000422061  optcr = 0.0001
  (Note that BARON uses a different formula to compute the relative gap as
   was used for the above reported value.)


                           LOWER          LEVEL          UPPER         MARGINAL

---- EQU Objective    -412748.1800   -412748.1800   -412748.1800         1.0000      

---- EQU Min_Dist  

                   LOWER          LEVEL          UPPER         MARGINAL

CNC  .Mill         80.0000        90.8553        +INF             .          
CNC  .Drill        80.0000        80.0000        +INF           93.7293      
CNC  .Punch        80.0000        80.0000        +INF            9.9911      
Mill .CNC          30.0000        90.8553        +INF             .          
Mill .Drill        30.0000        30.0000        +INF          160.2776      
Mill .Punch        30.0000        99.5384        +INF             .          
Drill.CNC          30.0000        80.0000        +INF             .          
Drill.Mill         30.0000        30.0000        +INF             .          
Drill.Punch        30.0000       112.9613        +INF             .          
Punch.CNC          30.0000        80.0000        +INF             .          
Punch.Mill         30.0000        99.5384        +INF             .          
Punch.Drill        30.0000       112.9613        +INF             .          

                           LOWER          LEVEL          UPPER         MARGINAL

---- VAR cost              -INF       -10986.3105        +INF             .          

---- VAR X_new  

             LOWER          LEVEL          UPPER         MARGINAL

CNC         155.0000       155.0000       300.0000        24.0607      
Mill        100.0000       228.0000       228.0000      -343.9926      
Drill       100.0000       200.4075       300.0000          .          
Punch       221.0000       221.0054       300.0000          .          

---- VAR Y_new  

             LOWER          LEVEL          UPPER         MARGINAL

CNC         100.0000       175.4930       300.0000          .          
Mill        100.0000       121.4034       300.0000          .          
Drill       100.0000       109.6283       300.0000          .          
Punch       100.0000       220.6958       293.0000          .          


**** REPORT SUMMARY :        0     NONOPT
                             0 INFEASIBLE
                             0  UNBOUNDED
                             0     ERRORS
                             5  PROJECTED
GAMS 30.2.0  r482c588 Released Feb  7, 2020 WEX-WEI x86 64bit/MS Windows - 06/21/20 18:10:36 Page 6
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
E x e c u t i o n


EXECUTION TIME       =        0.000 SECONDS      3 MB  30.2.0 r482c588 WEX-WEI


USER: CS526 Advanced Linear Programming              G200210/0001AS-GEN
      Course License UW-Madison, Prof Ferris, Spring 2020        DCE515
      License for teaching and research at degree granting institutions


**** FILE SUMMARY

Input      C:\Users\hasee\Documents\GitHub\GAMS-MIRO\facloc\model.gms
Output     C:\Users\hasee\Documents\GitHub\GAMS-MIRO\facloc\model.lst
